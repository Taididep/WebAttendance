-- 1. Ràng buộc thống kê khi cập nhật điểm danh
DELIMITER $$

CREATE TRIGGER after_attendance_update
AFTER UPDATE ON attendances
FOR EACH ROW
BEGIN
    DECLARE total_present INT DEFAULT 0;
    DECLARE total_absent INT DEFAULT 0;
    DECLARE total_late INT DEFAULT 0;
    DECLARE total INT DEFAULT 0;
    DECLARE current_class_id CHAR(36);

    -- Lấy class_id hiện tại từ bảng schedules
    SET current_class_id = (SELECT class_id FROM schedules WHERE schedule_id = NEW.schedule_id);

    -- Tính tổng số lần có mặt cho sinh viên trong class_id đó
    SELECT COUNT(*) INTO total_present
    FROM attendances
    WHERE student_id = NEW.student_id 
      AND status = 1
      AND schedule_id IN (SELECT schedule_id FROM schedules WHERE class_id = current_class_id);

    -- Tính tổng số lần vắng mặt cho sinh viên trong class_id đó
    SELECT COUNT(*) INTO total_absent
    FROM attendances
    WHERE student_id = NEW.student_id 
      AND status = 0
      AND schedule_id IN (SELECT schedule_id FROM schedules WHERE class_id = current_class_id);

    -- Tính tổng số lần muộn cho sinh viên trong class_id đó
    SELECT COUNT(*) INTO total_late
    FROM attendances
    WHERE student_id = NEW.student_id 
      AND status = 2
      AND schedule_id IN (SELECT schedule_id FROM schedules WHERE class_id = current_class_id);

    -- Tính tổng số dòng dữ liệu trong schedules cho class_id đó
    SELECT COUNT(*) INTO total
    FROM schedules
    WHERE class_id = current_class_id;

    -- Kiểm tra xem bản ghi báo cáo đã tồn tại hay chưa
    IF EXISTS (SELECT 1 FROM attendance_reports WHERE class_id = current_class_id AND student_id = NEW.student_id) THEN
        -- Nếu đã tồn tại, cập nhật bản ghi
        UPDATE attendance_reports
        SET total_present = total_present,
            total_absent = total_absent,
            total_late = total_late,
            total = total
        WHERE class_id = current_class_id
          AND student_id = NEW.student_id;
    ELSE
        -- Nếu chưa tồn tại, thêm mới bản ghi
        INSERT INTO attendance_reports (class_id, student_id, total_present, total_absent, total_late, total)
        VALUES (current_class_id, 
                NEW.student_id, 
                total_present, 
                total_absent, 
                total_late,
                total);
    END IF;
END $$

DELIMITER ;


-- 2. Ràng buộc thống kê khi thêm điểm danh
DELIMITER $$

CREATE TRIGGER after_attendance_insert
AFTER INSERT ON attendances
FOR EACH ROW
BEGIN
    DECLARE total_present INT DEFAULT 0;
    DECLARE total_absent INT DEFAULT 0;
    DECLARE total_late INT DEFAULT 0;
    DECLARE total INT DEFAULT 0;
    DECLARE current_class_id CHAR(36);

    -- Lấy class_id hiện tại từ bảng schedules
    SET current_class_id = (SELECT class_id FROM schedules WHERE schedule_id = NEW.schedule_id);

    -- Tính tổng số lần có mặt cho sinh viên trong class_id đó
    SELECT COUNT(*) INTO total_present
    FROM attendances
    WHERE student_id = NEW.student_id 
      AND status = 1
      AND schedule_id IN (SELECT schedule_id FROM schedules WHERE class_id = current_class_id);

    -- Tính tổng số lần vắng mặt cho sinh viên trong class_id đó
    SELECT COUNT(*) INTO total_absent
    FROM attendances
    WHERE student_id = NEW.student_id 
      AND status = 0
      AND schedule_id IN (SELECT schedule_id FROM schedules WHERE class_id = current_class_id);

    -- Tính tổng số lần muộn cho sinh viên trong class_id đó
    SELECT COUNT(*) INTO total_late
    FROM attendances
    WHERE student_id = NEW.student_id 
      AND status = 2
      AND schedule_id IN (SELECT schedule_id FROM schedules WHERE class_id = current_class_id);

    -- Tính tổng số dòng dữ liệu trong schedules cho class_id đó
    SELECT COUNT(*) INTO total
    FROM schedules
    WHERE class_id = current_class_id;

    -- Kiểm tra xem bản ghi báo cáo đã tồn tại hay chưa
    IF EXISTS (SELECT 1 FROM attendance_reports WHERE class_id = current_class_id AND student_id = NEW.student_id) THEN
        -- Nếu đã tồn tại, cập nhật bản ghi
        UPDATE attendance_reports
        SET total_present = total_present,
            total_absent = total_absent,
            total_late = total_late,
            total = total
        WHERE class_id = current_class_id
          AND student_id = NEW.student_id;
    ELSE
        -- Nếu chưa tồn tại, thêm mới bản ghi
        INSERT INTO attendance_reports (class_id, student_id, total_present, total_absent, total_late, total)
        VALUES (current_class_id, 
                NEW.student_id, 
                total_present, 
                total_absent, 
                total_late,
                total);
    END IF;
END $$

DELIMITER ;




-- 3 Ràng buộc vắng khi thêm điểm danh 
DELIMITER $$

CREATE TRIGGER before_insert_attendance
BEFORE INSERT ON attendances
FOR EACH ROW
BEGIN
    DECLARE schedule_date DATE;
    
    -- Lấy ngày từ bảng schedules dựa trên schedule_id
    SELECT date INTO schedule_date
    FROM schedules
    WHERE schedule_id = NEW.schedule_id;
    
    -- Kiểm tra nếu ngày nhỏ hơn hoặc bằng ngày hiện tại và status ban đầu là -1
    IF schedule_date <= CURDATE() AND NEW.status = -1 THEN
        SET NEW.status = 0;  -- Gán status = 0
    END IF;
END $$

DELIMITER ;



-- 4 Ràng buộc vắng khi cập nhật điểm danh 
DELIMITER $$

CREATE TRIGGER before_update_attendance
BEFORE UPDATE ON attendances
FOR EACH ROW
BEGIN
    DECLARE schedule_date DATE;
    
    -- Lấy ngày từ bảng schedules dựa trên schedule_id
    SELECT date INTO schedule_date
    FROM schedules
    WHERE schedule_id = NEW.schedule_id;
    
    -- Kiểm tra nếu ngày nhỏ hơn hoặc bằng ngày hiện tại và status ban đầu là -1
    IF schedule_date <= CURDATE() AND NEW.status = -1 THEN
        SET NEW.status = 0;  -- Gán status = 0
    END IF;
END $$

DELIMITER ;




