-- 4. Thủ tục lấy danh sach lớp theo học kỳ và giảng viên trong teacher.php(get_classes.php)
DELIMITER //
CREATE PROCEDURE GetClassesBySemesterAndTeacher(IN semester_id INT, IN teacher_id INT)
BEGIN
    SELECT 
        c.class_id, 
        c.class_name,
        co.course_name
    FROM classes c
    JOIN courses co ON c.course_id = co.course_id
    WHERE c.semester_id = semester_id AND c.teacher_id = teacher_id;
END //
DELIMITER ;


-- 5.Thủ tục lấy thông tin lớp (detail_class.php)
DELIMITER //
CREATE PROCEDURE GetClassDetailsById(IN classId CHAR(36))
BEGIN
    SELECT 
        c.class_id,
        c.class_name,
        s.semester_name,
        co.course_name,
        CONCAT(t.lastname, ' ', t.firstname) AS teacher_fullname
    FROM 
        classes c
    JOIN 
        semesters s ON c.semester_id = s.semester_id
    JOIN 
        courses co ON c.course_id = co.course_id
    JOIN 
        teachers t ON c.teacher_id = t.teacher_id
    WHERE 
        c.class_id = classId;
END //



-- 11. Thủ tục cập nhật hoặc thêm mới điểm danh(process_attendance)
DELIMITER $$

CREATE PROCEDURE UpdateOrInsertAttendance(
    IN p_schedule_id INT,
    IN p_student_id INT,
    IN p_status INT
)
BEGIN
    DECLARE attendanceExists INT;
    
    -- Kiểm tra xem điểm danh đã tồn tại hay chưa
    SELECT COUNT(*) INTO attendanceExists
    FROM attendances
    WHERE schedule_id = p_schedule_id AND student_id = p_student_id;
    
    IF attendanceExists > 0 THEN
        -- Nếu đã tồn tại, cập nhật trạng thái
        UPDATE attendances
        SET status = p_status
        WHERE schedule_id = p_schedule_id AND student_id = p_student_id;
    ELSE
        -- Nếu chưa tồn tại, thêm mới
        INSERT INTO attendances (schedule_id, student_id, status)
        VALUES (p_schedule_id, p_student_id, p_status);
    END IF;
END$$

DELIMITER ;


-- 25
DELIMITER $$

CREATE PROCEDURE CheckClassStudentExistence(
    IN p_class_id INT,
    IN p_student_id INT,
    OUT p_exists INT
)
BEGIN
    -- Check if student_id exists for the given class_id
    SELECT COUNT(*) INTO p_exists
    FROM class_students
    WHERE class_id = p_class_id AND student_id = p_student_id;
END $$

DELIMITER ;


-- 24
DELIMITER $$

CREATE PROCEDURE RemoveStudentFromClass(
    IN classId INT,
    IN studentId INT
)
BEGIN
    DELETE FROM class_students 
    WHERE class_id = classId AND student_id = studentId;
END $$

DELIMITER ;


-- 26
DELIMITER $$

CREATE PROCEDURE InsertClassStudent(IN p_class_id CHAR(36), IN p_student_id INT)
BEGIN
    IF NOT EXISTS (SELECT 1 FROM class_students WHERE class_id = p_class_id AND student_id = p_student_id) THEN
        -- Nếu chưa tồn tại, chèn dữ liệu mới vào bảng class_students
        INSERT INTO class_students (class_id, student_id, status)
        VALUES (p_class_id, p_student_id, 0);
    END IF;
END $$

DELIMITER ;



-- 14. Thủ tục lấy lịch dạy của giảng viên
DELIMITER //

CREATE PROCEDURE GetTeacherSchedules(
    IN startDate DATETIME,
    IN endDate DATETIME,
    IN semesterId INT,
    IN teacher_id INT
)
BEGIN
    SELECT 
        c.class_name,
        co.course_name,
        s.date,
        s.start_time,
        s.end_time,
        CASE 
            WHEN s.end_time < 7 THEN 'Sáng'
            WHEN s.end_time >= 7 AND s.end_time < 13 THEN 'Chiều'
            ELSE 'Tối'
        END AS ca_hoc 
    FROM 
        schedules s
    JOIN 
        classes c ON s.class_id = c.class_id
    JOIN 
        courses co ON c.course_id = co.course_id
    WHERE 
        DATE(s.date) BETWEEN DATE(startDate) AND DATE(endDate)  -- So sánh ngày
        AND c.semester_id = semesterId
        AND c.teacher_id = teacher_id  -- Lọc theo teacher_id
    ORDER BY 
        s.date, s.start_time;  -- Sắp xếp theo start_time (tăng dần)
END //

DELIMITER ;


-- 46 thủ tục nếu chưa kích hoạt, cập nhật status thành 1
DELIMITER $$

CREATE PROCEDURE UpdateStudentClassStatus(
    IN p_class_id CHAR(36),
    IN p_student_id INT
)
BEGIN
    UPDATE class_students 
    SET status = 1 
    WHERE class_id = p_class_id AND student_id = p_student_id;
END $$

DELIMITER ;


-- 57 thủ tục cập nhật mật khẩu đã mã hóa vào cơ sở dữ liệu
DELIMITER $$

CREATE PROCEDURE UpdateUserPassword(
    IN p_hashed_password VARCHAR(255),
    IN p_user_id INT
)
BEGIN
    UPDATE users 
    SET password = p_hashed_password 
    WHERE user_id = p_user_id;
END $$

DELIMITER ;


-- 60 thủ tục để lấy danh sách lịch dạy của giảng viên vào ngày mai
DELIMITER $$

CREATE PROCEDURE GetTeachingSchedulesByDate(
    IN p_date DATE
)
BEGIN
    SELECT t.email, t.firstname, t.lastname, s.date, s.start_time, s.end_time, c.class_name
    FROM teachers t
    JOIN classes c ON t.teacher_id = c.teacher_id
    JOIN schedules s ON c.class_id = s.class_id
    WHERE s.date = p_date
    ORDER BY t.email, s.start_time;
END $$

DELIMITER ;